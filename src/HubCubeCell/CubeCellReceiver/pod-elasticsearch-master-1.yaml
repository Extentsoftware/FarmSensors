apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-16T15:43:51Z"
  generateName: elasticsearch-master-
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    controller-revision-hash: elasticsearch-master-bd48df875
    heritage: Helm
    release: elasticsearch
    statefulset.kubernetes.io/pod-name: elasticsearch-master-1
  name: elasticsearch-master-1
  namespace: dev
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: elasticsearch-master
    uid: dc6b36ed-3bc7-4abd-b0fb-1521eae7bfff
  resourceVersion: "930827893"
  uid: f1962530-12f0-416c-8c45-567147c39f57
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - elasticsearch-master
        topologyKey: kubernetes.io/hostname
  containers:
  - env:
    - name: node.name
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: cluster.initial_master_nodes
      value: elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,
    - name: discovery.seed_hosts
      value: elasticsearch-master-headless
    - name: cluster.name
      value: elasticsearch
    - name: network.host
      value: 0.0.0.0
    - name: node.data
      value: "true"
    - name: node.ingest
      value: "true"
    - name: node.master
      value: "true"
    image: artiogblcontainerregistry.azurecr.io/elasticsearch-artio:1.1.1
    imagePullPolicy: IfNotPresent
    name: elasticsearch
    ports:
    - containerPort: 9200
      name: http
      protocol: TCP
    - containerPort: 9300
      name: transport
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          # If the node is starting up wait for the cluster to be ready (request params: 'wait_for_status=green&timeout=1s' )
          # Once it has started only check that the node itself is responding
          START_FILE=/tmp/.es_start_file

          http () {
              local path="${1}"
              if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
              else
                BASIC_AUTH=''
              fi
              curl -XGET -s -k --fail ${BASIC_AUTH} http://127.0.0.1:9200${path}
          }

          if [ -f "${START_FILE}" ]; then
              echo 'Elasticsearch is already running, lets check the node is healthy'
              http "/"
          else
              echo 'Waiting for elasticsearch cluster to become cluster to be ready (request params: "wait_for_status=green&timeout=1s" )'
              if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                  touch ${START_FILE}
                  exit 0
              else
                  echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                  exit 1
              fi
          fi
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 3
      timeoutSeconds: 5
    resources:
      limits:
        cpu: "1"
        memory: 3Gi
      requests:
        cpu: "1"
        memory: 3Gi
    securityContext:
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /usr/share/elasticsearch/data
      name: elasticsearch-master
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jtd7x
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: elasticsearch-master-1
  imagePullSecrets:
  - name: admin-gbl-acr
  initContainers:
  - command:
    - sysctl
    - -w
    - vm.max_map_count=262144
    image: artiogblcontainerregistry.azurecr.io/elasticsearch-artio:1.1.1
    imagePullPolicy: IfNotPresent
    name: configure-sysctl
    resources: {}
    securityContext:
      privileged: true
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jtd7x
      readOnly: true
  nodeName: aks-nodepool1-39805741-17
  nodeSelector:
    artio/nodetype: elastic
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  serviceAccount: default
  serviceAccountName: default
  subdomain: elasticsearch-master-headless
  terminationGracePeriodSeconds: 120
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: elasticsearch-master
    persistentVolumeClaim:
      claimName: elasticsearch-master-elasticsearch-master-1
  - name: kube-api-access-jtd7x
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-16T15:47:21Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-16T15:48:51Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-16T15:48:51Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-16T15:43:51Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://96a729517d2dc2e4f8439cf272b5dc5f667d44f71d0ca2fe66d2870d9116c827
    image: artiogblcontainerregistry.azurecr.io/elasticsearch-artio:1.1.1
    imageID: artiogblcontainerregistry.azurecr.io/elasticsearch-artio@sha256:84aa814e030eef6e94dd34cd0cdb5beb9d2760b2b913f4cd4bec91e1110ea351
    lastState: {}
    name: elasticsearch
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-16T15:47:22Z"
  hostIP: 10.240.0.21
  initContainerStatuses:
  - containerID: containerd://34e2ae8ced72f0688db9b5069dc4b89269366ff5985b4ca651eaba813daa9e88
    image: artiogblcontainerregistry.azurecr.io/elasticsearch-artio:1.1.1
    imageID: artiogblcontainerregistry.azurecr.io/elasticsearch-artio@sha256:84aa814e030eef6e94dd34cd0cdb5beb9d2760b2b913f4cd4bec91e1110ea351
    lastState: {}
    name: configure-sysctl
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://34e2ae8ced72f0688db9b5069dc4b89269366ff5985b4ca651eaba813daa9e88
        exitCode: 0
        finishedAt: "2023-03-16T15:47:17Z"
        reason: Completed
        startedAt: "2023-03-16T15:47:17Z"
  phase: Running
  podIP: 10.244.18.8
  podIPs:
  - ip: 10.244.18.8
  qosClass: Burstable
  startTime: "2023-03-16T15:43:51Z"
